name: nightly-build

on:
  schedule:
    # 01:30 UTC = 20:30/21:30 America/New_York = 03:30/04:30 Europe/Athens
    - cron: '30 1 * * *'

jobs:
  run-tests:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      # Avoid excessive concurrency for nightlies; it's OK if they take a while.
      max-parallel: 1
      matrix:
        os:
          - ubuntu-20.04
          - macos-10.15
        python-version: ["3.7", "3.6"]
        dependencies:
          - pinned
          - fresh
        include:
          - os: ubuntu-20.04
            path: ~/.cache/pip
          - os: macos-10.15
            path: ~/Library/Caches/pip

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pinned dependencies
        if: ${{ matrix.dependencies == 'pinned' }}
        uses: actions/cache@v2
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles(format('./requirements-py{0}.txt', matrix.python-version)) }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-pip-

      # This step ensures that every month we have a new Pip cache, so that
      # we don't have one cache sitting for months growing ever-staler.
      - name: Get month for cache key
        id: month
        if: ${{ matrix.dependencies == 'fresh' }}
        run: |
          echo "::set-output name=month::$(date +'%Y-%m')"

      - name: Cache fresh install dependencies
        if: ${{ matrix.dependencies == 'fresh' }}
        uses: actions/cache@v2
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-fresh-${{ steps.month.outputs.month }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-pip-fresh-
            ${{ runner.os }}-py${{ matrix.python-version }}-pip-

      - name: Install prerequisites
        run: |
          pip install --upgrade pip wheel pytest pytest-cov setuptools setuptools-scm

      - name: Install pinned dependencies
        if: ${{ matrix.dependencies == 'pinned' }}
        run: |
          pip install -r requirements-py${{ matrix.python-version }}.txt

      - name: Install TileDB-Cloud-Py
        run: |
          pip install .

      - name: Run tests
        run: |
          pytest -s -v --junitxml=junit/test-results.xml --cov=tiledb/cloud/ --cov-report=xml --cov-report=html
        env:
          TILEDB_CLOUD_HELPER_VAR: ${{ secrets.TILEDB_CLOUD_HELPER_VAR }}
