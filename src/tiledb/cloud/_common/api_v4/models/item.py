# coding: utf-8

"""
    Specification file for tiledb-server v4 API

    This spec is exposed to the public under /v4 route group  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Contact: info@tiledb.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from tiledb.cloud._common.api_v4.configuration import Configuration


class Item(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    THEME_SELECTION = "theme_selection"
    PROFILE_INFO = "profile_info"
    CLAIM_CREDITS = "claim_credits"
    CLOUD_STORAGE = "cloud_storage"
    ROOT_PATH = "root_path"
    INTRO = "intro"
    BASIC_TOUR = "basic_tour"
    SKIP_USER_ONBOARDING = "skip_user_onboarding"
    ADD_ASSET = "add_asset"
    LAUNCH_NOTEBOOK = "launch_notebook"
    INDICATE_FINISH_USER_ONBOARDING = "indicate_finish_user_onboarding"
    ORGANIZATION_BASIC_TOUR = "organization_basic_tour"
    INDICATE_FINISH_ORG_ONBOARDING = "indicate_finish_org_onboarding"
    SKIP_ORGANIZATION_ONBOARDING = "skip_organization_onboarding"

    allowable_values = [
        THEME_SELECTION,
        PROFILE_INFO,
        CLAIM_CREDITS,
        CLOUD_STORAGE,
        ROOT_PATH,
        INTRO,
        BASIC_TOUR,
        SKIP_USER_ONBOARDING,
        ADD_ASSET,
        LAUNCH_NOTEBOOK,
        INDICATE_FINISH_USER_ONBOARDING,
        ORGANIZATION_BASIC_TOUR,
        INDICATE_FINISH_ORG_ONBOARDING,
        SKIP_ORGANIZATION_ONBOARDING,
    ]  # noqa: E501

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {}

    attribute_map = {}

    def __init__(self, local_vars_configuration=None):  # noqa: E501
        """Item - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration
        self.discriminator = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Item):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, Item):
            return True

        return self.to_dict() != other.to_dict()
