# coding: utf-8

"""
    Tiledb Storage Platform API

    TileDB Storage Platform REST API  # noqa: E501

    The version of the OpenAPI document: 1.4.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import datetime
import unittest

import tiledb.cloud._common.api_v2
from tiledb.cloud._common.api_v2.models.array import Array  # noqa: E501
from tiledb.cloud._common.api_v2.rest import ApiException


class TestArray(unittest.TestCase):
    """Array unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Array
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # model = tiledb.cloud._common.api_v2.models.array.Array()  # noqa: E501
        if include_optional:
            return Array(
                query_type="READ",
                uri="0",
                end_timestamp=1540471791873,
                start_timestamp=1540471791873,
                array_schema_latest=tiledb.cloud._common.api_v2.models.array_schema.ArraySchema(
                    uri="s3://<bucket>/test_array",
                    name="0",
                    version=[1, 3, 0],
                    array_type="dense",
                    tile_order="row-major",
                    cell_order="row-major",
                    capacity=100000,
                    coords_filter_pipeline=tiledb.cloud._common.api_v2.models.filter_pipeline.FilterPipeline(
                        filters=[
                            tiledb.cloud._common.api_v2.models.filter.Filter(
                                type="FILTER_NONE",
                                float_scale_config=tiledb.cloud._common.api_v2.models.float_scale_config.FloatScaleConfig(
                                    scale=56,
                                    offset=56,
                                    byte_width=56,
                                ),
                                data=tiledb.cloud._common.api_v2.models.filter_data.Filter_data(
                                    text="0",
                                    bytes=[56],
                                    int8=56,
                                    uint8=56,
                                    int16=56,
                                    uint16=56,
                                    int32=56,
                                    uint32=56,
                                    int64=56,
                                    uint64=56,
                                    float32=56,
                                    float64=56,
                                ),
                            )
                        ],
                    ),
                    offset_filter_pipeline=tiledb.cloud._common.api_v2.models.filter_pipeline.FilterPipeline(),
                    validity_filter_pipeline=tiledb.cloud._common.api_v2.models.filter_pipeline.FilterPipeline(),
                    domain=tiledb.cloud._common.api_v2.models.domain.Domain(
                        type="INT32",
                        tile_order="row-major",
                        cell_order="row-major",
                        dimensions=[
                            tiledb.cloud._common.api_v2.models.dimension.Dimension(
                                name="row",
                                type="INT32",
                                domain=tiledb.cloud._common.api_v2.models.domain_array.DomainArray(
                                    int8=[56],
                                    uint8=[56],
                                    int16=[56],
                                    uint16=[56],
                                    int32=[56],
                                    uint32=[56],
                                    int64=[56],
                                    uint64=[56],
                                    float32=[1.337],
                                    float64=[1.337],
                                ),
                                null_tile_extent=True,
                                tile_extent=tiledb.cloud._common.api_v2.models.dimension_tile_extent.Dimension_tileExtent(),
                                filter_pipeline=tiledb.cloud._common.api_v2.models.filter_pipeline.FilterPipeline(),
                            )
                        ],
                    ),
                    attributes=[
                        tiledb.cloud._common.api_v2.models.attribute.Attribute(
                            name="attribute1",
                            type="INT32",
                            filter_pipeline=tiledb.cloud._common.api_v2.models.filter_pipeline.FilterPipeline(),
                            cell_val_num=1,
                            nullable=True,
                            fill_value_validity=True,
                            fill_value=[56],
                        )
                    ],
                    allows_duplicates=True,
                    timestamp_range=[56],
                ),
                array_schemas_all=tiledb.cloud._common.api_v2.models.array_schema_map.ArraySchemaMap(
                    entries=[
                        tiledb.cloud._common.api_v2.models.array_schema_entry.ArraySchemaEntry(
                            key="0",
                            value=tiledb.cloud._common.api_v2.models.array_schema.ArraySchema(
                                uri="s3://<bucket>/test_array",
                                name="0",
                                version=[1, 3, 0],
                                array_type="dense",
                                tile_order="row-major",
                                cell_order="row-major",
                                capacity=100000,
                                coords_filter_pipeline=tiledb.cloud._common.api_v2.models.filter_pipeline.FilterPipeline(
                                    filters=[
                                        tiledb.cloud._common.api_v2.models.filter.Filter(
                                            type="FILTER_NONE",
                                            float_scale_config=tiledb.cloud._common.api_v2.models.float_scale_config.FloatScaleConfig(
                                                scale=56,
                                                offset=56,
                                                byte_width=56,
                                            ),
                                            data=tiledb.cloud._common.api_v2.models.filter_data.Filter_data(
                                                text="0",
                                                bytes=[56],
                                                int8=56,
                                                uint8=56,
                                                int16=56,
                                                uint16=56,
                                                int32=56,
                                                uint32=56,
                                                int64=56,
                                                uint64=56,
                                                float32=56,
                                                float64=56,
                                            ),
                                        )
                                    ],
                                ),
                                offset_filter_pipeline=tiledb.cloud._common.api_v2.models.filter_pipeline.FilterPipeline(),
                                validity_filter_pipeline=tiledb.cloud._common.api_v2.models.filter_pipeline.FilterPipeline(),
                                domain=tiledb.cloud._common.api_v2.models.domain.Domain(
                                    type="INT32",
                                    tile_order="row-major",
                                    cell_order="row-major",
                                    dimensions=[
                                        tiledb.cloud._common.api_v2.models.dimension.Dimension(
                                            name="row",
                                            type="INT32",
                                            domain=tiledb.cloud._common.api_v2.models.domain_array.DomainArray(
                                                int8=[56],
                                                uint8=[56],
                                                int16=[56],
                                                uint16=[56],
                                                int32=[56],
                                                uint32=[56],
                                                int64=[56],
                                                uint64=[56],
                                                float32=[1.337],
                                                float64=[1.337],
                                            ),
                                            null_tile_extent=True,
                                            tile_extent=tiledb.cloud._common.api_v2.models.dimension_tile_extent.Dimension_tileExtent(),
                                            filter_pipeline=tiledb.cloud._common.api_v2.models.filter_pipeline.FilterPipeline(),
                                        )
                                    ],
                                ),
                                attributes=[
                                    tiledb.cloud._common.api_v2.models.attribute.Attribute(
                                        name="attribute1",
                                        type="INT32",
                                        filter_pipeline=tiledb.cloud._common.api_v2.models.filter_pipeline.FilterPipeline(),
                                        cell_val_num=1,
                                        nullable=True,
                                        fill_value_validity=True,
                                        fill_value=[56],
                                    )
                                ],
                                allows_duplicates=True,
                                timestamp_range=[56],
                            ),
                        )
                    ],
                ),
                array_metadata=tiledb.cloud._common.api_v2.models.array_metadata.ArrayMetadata(
                    entries=[
                        tiledb.cloud._common.api_v2.models.array_metadata_entry.ArrayMetadataEntry(
                            key="0",
                            type="0",
                            value_num=56,
                            value=[56],
                            _del=True,
                        )
                    ],
                ),
                non_empty_domain=tiledb.cloud._common.api_v2.models.non_empty_domain_list.NonEmptyDomainList(
                    non_empty_domains=[
                        tiledb.cloud._common.api_v2.models.non_empty_domain.NonEmptyDomain(
                            non_empty_domain=tiledb.cloud._common.api_v2.models.domain_array.DomainArray(
                                int8=[56],
                                uint8=[56],
                                int16=[56],
                                uint16=[56],
                                int32=[56],
                                uint32=[56],
                                int64=[56],
                                uint64=[56],
                                float32=[1.337],
                                float64=[1.337],
                            ),
                            is_empty=False,
                            sizes=[56],
                        )
                    ],
                ),
                array_directory=tiledb.cloud._common.api_v2.models.array_directory.ArrayDirectory(
                    unfiltered_fragment_uris=["0"],
                    consolidated_commit_uris=["0"],
                    array_schema_uris=["0"],
                    latest_array_schema_uri="0",
                    array_meta_uris_to_vacuum=["0"],
                    array_meta_vac_uris_to_vacuum=["0"],
                    commit_uris_to_consolidate=["0"],
                    commit_uris_to_vacuum=["0"],
                    consolidated_commit_uris_to_vacuum=["0"],
                    fragment_meta_uris=["0"],
                    timestamp_start=1.337,
                    timestamp_end=1.337,
                    array_meta_uris=[
                        tiledb.cloud._common.api_v2.models.timestamped_uri.TimestampedURI(
                            uri="0",
                            timestamp_start=1.337,
                            timestamp_end=1.337,
                        )
                    ],
                    delete_and_update_tile_location=[
                        tiledb.cloud._common.api_v2.models.delete_and_update_tile_location.DeleteAndUpdateTileLocation(
                            uri="0",
                            condition_marker="0",
                            offset=1.337,
                        )
                    ],
                ),
                fragment_metadata_all=[
                    tiledb.cloud._common.api_v2.models.fragment_metadata.FragmentMetadata(
                        file_sizes=[1.337],
                        file_var_sizes=[1.337],
                        file_validity_sizes=[1.337],
                        fragment_uri="0",
                        has_timestamps=True,
                        has_delete_meta=True,
                        sparse_tile_num=1.337,
                        tile_index_base=1.337,
                        tile_offsets=[[1.337]],
                        tile_var_offsets=[[1.337]],
                        tile_var_sizes=[[1.337]],
                        tile_validity_offsets=[[1.337]],
                        tile_min_buffer=[[1.337]],
                        tile_min_var_buffer=[[1.337]],
                        tile_max_buffer=[[1.337]],
                        tile_max_var_buffer=[[1.337]],
                        tile_sums=[[1.337]],
                        tile_null_counts=[[1.337]],
                        fragment_mins=[[1.337]],
                        fragment_maxs=[[1.337]],
                        fragment_sums=[1.337],
                        fragment_null_counts=[1.337],
                        version=56,
                        timestamp_range=[1.337],
                        last_tile_cell_num=56,
                        non_empty_domain=tiledb.cloud._common.api_v2.models.non_empty_domain_list.NonEmptyDomainList(
                            non_empty_domains=[
                                tiledb.cloud._common.api_v2.models.non_empty_domain.NonEmptyDomain(
                                    non_empty_domain=tiledb.cloud._common.api_v2.models.domain_array.DomainArray(
                                        int8=[56],
                                        uint8=[56],
                                        int16=[56],
                                        uint16=[56],
                                        int32=[56],
                                        uint32=[56],
                                        int64=[56],
                                        uint64=[56],
                                        float32=[1.337],
                                        float64=[1.337],
                                    ),
                                    is_empty=False,
                                    sizes=[56],
                                )
                            ],
                        ),
                        rtree=bytes(b"blah"),
                        has_consolidated_footer=True,
                        gt_offsets=tiledb.cloud._common.api_v2.models.generic_tile_offsets.GenericTileOffsets(
                            rtree=1.337,
                            tile_min_offsets=[1.337],
                            tile_max_offsets=[1.337],
                            tile_sum_offsets=[1.337],
                            tile_null_count_offsets=[1.337],
                            fragment_min_max_sum_null_count_offset=1.337,
                            processed_conditions_offsets=1.337,
                        ),
                    )
                ],
                opened_at_end_timestamp=1.337,
            )
        else:
            return Array(
                query_type="READ",
                uri="0",
            )

    def testArray(self):
        """Test Array"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
