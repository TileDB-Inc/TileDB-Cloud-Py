# coding: utf-8

"""
    Tiledb Storage Platform API

    TileDB Storage Platform REST API  # noqa: E501

    The version of the OpenAPI document: 1.4.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import datetime
import unittest

import tiledb.cloud._common.api_v2
from tiledb.cloud._common.api_v2.models.array_directory import (  # noqa: E501
    ArrayDirectory,
)
from tiledb.cloud._common.api_v2.rest import ApiException


class TestArrayDirectory(unittest.TestCase):
    """ArrayDirectory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ArrayDirectory
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # model = tiledb.cloud._common.api_v2.models.array_directory.ArrayDirectory()  # noqa: E501
        if include_optional:
            return ArrayDirectory(
                unfiltered_fragment_uris=["0"],
                consolidated_commit_uris=["0"],
                array_schema_uris=["0"],
                latest_array_schema_uri="0",
                array_meta_uris_to_vacuum=["0"],
                array_meta_vac_uris_to_vacuum=["0"],
                commit_uris_to_consolidate=["0"],
                commit_uris_to_vacuum=["0"],
                consolidated_commit_uris_to_vacuum=["0"],
                fragment_meta_uris=["0"],
                timestamp_start=1.337,
                timestamp_end=1.337,
                array_meta_uris=[
                    tiledb.cloud._common.api_v2.models.timestamped_uri.TimestampedURI(
                        uri="0",
                        timestamp_start=1.337,
                        timestamp_end=1.337,
                    )
                ],
                delete_and_update_tile_location=[
                    tiledb.cloud._common.api_v2.models.delete_and_update_tile_location.DeleteAndUpdateTileLocation(
                        uri="0",
                        condition_marker="0",
                        offset=1.337,
                    )
                ],
            )
        else:
            return ArrayDirectory()

    def testArrayDirectory(self):
        """Test ArrayDirectory"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
