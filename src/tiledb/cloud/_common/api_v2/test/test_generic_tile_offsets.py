# coding: utf-8

"""
    Tiledb Storage Platform API

    TileDB Storage Platform REST API  # noqa: E501

    The version of the OpenAPI document: 1.4.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import datetime
import unittest

import tiledb.cloud._common.api_v2
from tiledb.cloud._common.api_v2.models.generic_tile_offsets import (  # noqa: E501
    GenericTileOffsets,
)
from tiledb.cloud._common.api_v2.rest import ApiException


class TestGenericTileOffsets(unittest.TestCase):
    """GenericTileOffsets unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GenericTileOffsets
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # model = tiledb.cloud._common.api_v2.models.generic_tile_offsets.GenericTileOffsets()  # noqa: E501
        if include_optional:
            return GenericTileOffsets(
                rtree=1.337,
                tile_offsets=[1.337],
                tile_var_offsets=[1.337],
                tile_var_sizes=[1.337],
                tile_validity_offsets=[1.337],
                tile_min_offsets=[1.337],
                tile_max_offsets=[1.337],
                tile_sum_offsets=[1.337],
                tile_null_count_offsets=[1.337],
                fragment_min_max_sum_null_count_offset=1.337,
                processed_conditions_offsets=1.337,
            )
        else:
            return GenericTileOffsets()

    def testGenericTileOffsets(self):
        """Test GenericTileOffsets"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
