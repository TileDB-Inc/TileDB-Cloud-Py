# coding: utf-8

"""
    TileDB Storage Platform API

    TileDB Storage Platform REST API  # noqa: E501

    The version of the OpenAPI document: 2.2.19
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import datetime
import unittest

import tiledb.cloud.rest_api
from tiledb.cloud.rest_api.models.fragment_metadata import (  # noqa: E501
    FragmentMetadata,
)
from tiledb.cloud.rest_api.rest import ApiException


class TestFragmentMetadata(unittest.TestCase):
    """FragmentMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test FragmentMetadata
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # model = tiledb.cloud.rest_api.models.fragment_metadata.FragmentMetadata()  # noqa: E501
        if include_optional:
            return FragmentMetadata(
                file_sizes=[56],
                file_var_sizes=[56],
                file_validity_sizes=[56],
                fragment_uri="0",
                has_timestamps=True,
                has_delete_meta=True,
                sparse_tile_num=56,
                tile_index_base=56,
                tile_offsets=[[56]],
                tile_var_offsets=[[56]],
                tile_var_sizes=[[56]],
                tile_validity_offsets=[[56]],
                tile_min_buffer=[[56]],
                tile_min_var_buffer=[[56]],
                tile_max_buffer=[[56]],
                tile_max_var_buffer=[[56]],
                tile_sums=[[56]],
                tile_null_counts=[[56]],
                fragment_mins=[[56]],
                fragment_maxs=[[56]],
                fragment_sums=[56],
                fragment_null_counts=[56],
                version=56,
                timestamp_range=[56],
                last_tile_cell_num=56,
            )
        else:
            return FragmentMetadata()

    def testFragmentMetadata(self):
        """Test FragmentMetadata"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
